apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: dingofs-csi-driver
    app.kubernetes.io/name: dingofs-csi-driver
    app.kubernetes.io/version: master
  name: dingofs-csi-controller
  namespace: dingofs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dingofs-csi-controller
      app.kubernetes.io/instance: dingofs-csi-driver
      app.kubernetes.io/name: dingofs-csi-driver
      app.kubernetes.io/version: master
  serviceName: dingofs-csi-controller
  template:
    metadata:
      labels:
        app: dingofs-csi-controller
        app.kubernetes.io/instance: dingofs-csi-driver
        app.kubernetes.io/name: dingofs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --leader-election
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DINGOFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DINGOFS_MOUNT_PATH
          value: /var/lib/dingofs/volume
        - name: DINGOFS_CONFIG_PATH
          value: /var/lib/dingofs/config
        image: harbor.zetyun.cn/dingofs/dingofs-csi:v2.1-alpha
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: dingofs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        - mountPath: /dfs
          mountPropagation: Bidirectional
          name: dfs-dir
        - mountPath: /root/.dingofs
          mountPropagation: Bidirectional
          name: dfs-root-dir
        - mountPath: /etc/config
          name: dingofs-config
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --leader-election
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: harbor.zetyun.cn/dingofs/sig-storage/csi-provisioner:v2.2.2
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --v=2
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: harbor.zetyun.cn/dingofs/sig-storage/csi-resizer:v1.9.0
        name: csi-resizer
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: harbor.zetyun.cn/dingofs/sig-storage/livenessprobe:v2.11.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: dingofs-csi-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - hostPath:
          path: /var/lib/dingofs/volume
          type: DirectoryOrCreate
        name: dfs-dir
      - hostPath:
          path: /var/lib/dingofs/config
          type: DirectoryOrCreate
        name: dfs-root-dir
      - configMap:
          defaultMode: 420
          name: dingofs-csi-driver-config
        name: dingofs-config
  volumeClaimTemplates: []